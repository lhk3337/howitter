{"version":3,"sources":["firebaseAPI.ts","styles/Common/CommonStyle.ts","styles/theme.ts","styles/Components/AuthFormStyle.ts","Components/AuthForm.tsx","styles/Routes/AuthStyle.ts","Routes/Auth.tsx","styles/Components/HowitterStyle.ts","Components/Howitter.tsx","styles/Components/HowitterFactoryStyle.ts","Components/HowitterFactory.tsx","styles/Routes/HomeStyle.ts","Routes/Home.tsx","styles/Components/NavigationStyle.ts","Components/Navigation.tsx","styles/Routes/ProfileStyle.ts","Routes/Profile.tsx","styles/Components/RouterStyle.ts","Components/Router.tsx","styles/global-styles.ts","Components/App.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseAuth","auth","authService","dbService","firestore","storageService","storage","CommonContainer","css","CommonFormInput","CommonFormBtn","CommonCancelBtn","theme","color","main","sub","skyblue","green","Form","styled","form","Input","input","Submit","props","StateBackgroundColor","Error","span","Switch","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","autoComplete","onClick","prev","Container","div","Btns","Btn","button","Auth","onSocialClick","currentTarget","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","size","style","marginBottom","faGoogle","faGithub","share","FormSubmit","FormInput","SubmitInput","CancelBtn","Message","h4","ProfileImg","img","HowitterAction","Howitter","howitterObj","isOwner","editing","setEditing","newHowitter","setNewHowitter","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","togleEditing","update","src","faTrash","faPencilAlt","FactoryForm","FactoryContainer","FactoryInput","FactoryInputArrow","FactoryLabel","label","FactoryInputFile","FactoryAttachment","FactoryClear","HowitterFactory","userObj","howitter","setHowitter","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","fileOne","files","reader","FileReader","onloadend","finishedEvent","result","readAsDataURL","faTimes","Items","Home","howitters","setHowitters","useEffect","orderBy","onSnapshot","snapshot","howitterArray","docs","map","data","MenuList","ul","LinkHome","Link","LinkProfile","UserName","LogOutBtn","Navigation","history","useHistory","to","faUser","displayName","signOut","push","Profile","refreshUser","newDisplayName","setNewDisplayName","updateProfile","autoFocus","RouterContainer","AppRouter","isLoggedIn","exact","path","render","component","GlobalStyle","createGlobalStyle","reset","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b7c1c17.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport { IFireBaseConfig } from \"types\";\n\nconst firebaseConfig: IFireBaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const firebaseAuth = firebase.auth;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n","import { css } from \"styled-components\";\nexport const CommonContainer = css`\n  width: 100%;\n  max-width: 320px;\n  display: flex;\n  flex-direction: column;\n  margin-top: 30px;\n`;\n\nexport const CommonFormInput = css`\n  width: 100%;\n  padding: 10px 20px;\n  border-radius: 20px;\n  border: 1px solid black;\n  text-align: center;\n  background-color: white;\n  color: black;\n`;\n\nexport const CommonFormBtn = css`\n  cursor: pointer;\n  width: 100%;\n  padding: 7px 20px;\n  text-align: center;\n  color: white;\n  border-radius: 20px;\n  background-color: #04aaff;\n  cursor: pointer;\n`;\n\nexport const CommonCancelBtn = css`\n  cursor: pointer;\n  background-color: tomato;\n`;\n","const color = {\n  main: \"#1c1f25\",\n  sub: \"#fff\",\n  skyblue: \"#04aaff\",\n  green: \"#00cc00\",\n};\n\nconst theme = {\n  color,\n};\nexport default theme;\n","import styled from \"styled-components\";\nimport { CommonContainer } from \"styles/Common/CommonStyle\";\nimport { AuthFormSubmitStyleProps } from \"types\";\nimport theme from \"styles/theme\";\n\nexport const Form = styled.form`\n  ${CommonContainer}\n`;\n\nexport const Input = styled.input`\n  max-width: 320px;\n  width: 100%;\n  padding: 10px;\n  border-radius: 30px;\n  background-color: rgba(255, 255, 255, 1);\n  margin-bottom: 10px;\n  font-size: 12px;\n  color: black;\n`;\n\nexport const Submit = styled(Input)<AuthFormSubmitStyleProps>`\n  text-align: center;\n  background: ${(props) => (props.StateBackgroundColor ? `${theme.color.green}` : `${theme.color.skyblue}`)};\n  color: white;\n  font-weight: bold;\n  margin-top: 10px;\n  cursor: pointer;\n`;\n\nexport const Error = styled.span`\n  color: tomato;\n  text-align: center;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nexport const Switch = styled.span`\n  color: #04aaff;\n  cursor: pointer;\n  margin-top: 10px;\n  margin-bottom: 50px;\n  display: block;\n  font-size: 12px;\n  text-decoration: underline;\n`;\n","import React, { useState } from \"react\";\nimport { authService } from \"firebaseAPI\";\nimport { TFormEvent, TChangeEvent } from \"types\";\nimport * as AuthFormStyle from \"styles/Components/AuthFormStyle\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [newAccount, setNewAccount] = useState<boolean>(true);\n  const [error, setError] = useState<string>();\n\n  const onChange = (event: TChangeEvent): void => {\n    const {\n      target: { name, value },\n    } = event;\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event: TFormEvent): Promise<void> => {\n    event.preventDefault();\n    try {\n      if (newAccount) {\n        await authService.createUserWithEmailAndPassword(email, password);\n      } else {\n        await authService.signInWithEmailAndPassword(email, password);\n      }\n    } catch (e) {\n      setError((e as Error).message);\n    }\n  };\n\n  const toggleAcount = () => setNewAccount((prev: boolean) => !prev);\n\n  return (\n    <>\n      <AuthFormStyle.Form onSubmit={onSubmit}>\n        <AuthFormStyle.Input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} />\n        <AuthFormStyle.Input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          onChange={onChange}\n          autoComplete=\"on\"\n        />\n        <AuthFormStyle.Submit\n          StateBackgroundColor={newAccount}\n          type=\"submit\"\n          value={newAccount ? \"Create Account\" : \"Sign In\"}\n        />\n        {error && <AuthFormStyle.Error>{error}</AuthFormStyle.Error>}\n      </AuthFormStyle.Form>\n      <AuthFormStyle.Switch onClick={toggleAcount}>{newAccount ? \"Sign In\" : \"Create Account\"}</AuthFormStyle.Switch>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Btns = styled.div`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  max-width: 320px;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  border-radius: 20px;\n  border: none;\n  padding: 10px 0px;\n  font-size: 12px;\n  text-align: center;\n  width: 150px;\n  background: white;\n  cursor: pointer;\n`;\n","import React from \"react\";\nimport { authService, firebaseAuth } from \"firebaseAPI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"Components/AuthForm\";\nimport { TClickEvent } from \"types\";\nimport * as Style from \"styles/Routes/AuthStyle\";\n\nconst Auth = () => {\n  const onSocialClick = async (event: TClickEvent): Promise<void> => {\n    const {\n      currentTarget: { name },\n    } = event;\n    let provider: any;\n    if (name === \"google\") {\n      provider = new firebaseAuth.GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new firebaseAuth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider);\n  };\n\n  return (\n    <Style.Container>\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <Style.Btns>\n        <Style.Btn onClick={onSocialClick} name=\"google\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </Style.Btn>\n        <Style.Btn onClick={onSocialClick} name=\"github\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </Style.Btn>\n      </Style.Btns>\n    </Style.Container>\n  );\n};\n\nexport default Auth;\n","import styled, { css } from \"styled-components\";\nimport { CommonFormInput, CommonContainer, CommonFormBtn, CommonCancelBtn } from \"styles/Common/CommonStyle\";\nconst share = css`\n  cursor: pointer;\n  margin-top: 15px;\n  margin-bottom: 5px;\n`;\n\nexport const Container = styled.div`\n  margin-bottom: 20px;\n  background-color: white;\n  width: 100%;\n  max-width: 320px;\n  padding: 20px;\n  border-radius: 10px;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport const FormSubmit = styled.form`\n  ${CommonContainer}\n`;\n\nexport const FormInput = styled.input`\n  ${CommonFormInput}\n  ${share}\n`;\n\nexport const SubmitInput = styled.input`\n  ${share}\n  ${CommonFormBtn}\n  margin-bottom: 10px;\n`;\n\nexport const CancelBtn = styled.span`\n  ${CommonFormBtn}\n  ${CommonCancelBtn}\n`;\n\nexport const Message = styled.h4`\n  font-size: 14px;\n`;\n\nexport const ProfileImg = styled.img`\n  right: -66px;\n  top: -8px;\n  position: absolute;\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  margin-top: 10px;\n`;\n\nexport const HowitterAction = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  & > span {\n    cursor: pointer;\n  }\n  & > span:first-child {\n    margin-right: 10px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"firebaseAPI\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { howitterObjsType, TChangeEvent, TFormEvent } from \"types\";\nimport * as Style from \"styles/Components/HowitterStyle\";\n\nconst Howitter = ({ howitterObj, isOwner }: howitterObjsType) => {\n  //isOwner는 작성자 인지 판별\n  const [editing, setEditing] = useState<boolean>(false);\n  const [newHowitter, setNewHowitter] = useState(howitterObj.message);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"메시지를 삭제 하시겠습니까?\");\n    if (ok) {\n      await dbService.doc(`howitter/${howitterObj.id}`).delete(); //메시지 삭제\n      if (howitterObj.attachmentUrl) {\n        await storageService.refFromURL(howitterObj.attachmentUrl).delete(); //파일 삭제\n      }\n    }\n  };\n\n  const togleEditing = () => setEditing((prev) => !prev);\n\n  const onSubmit = async (event: TFormEvent) => {\n    event.preventDefault();\n    await dbService.doc(`howitter/${howitterObj.id}`).update({\n      message: newHowitter,\n    });\n    setEditing(false);\n  };\n\n  const onChange = (event: TChangeEvent) => {\n    const {\n      target: { value },\n    } = event;\n    setNewHowitter(value);\n  };\n  return (\n    <Style.Container>\n      {editing ? (\n        <>\n          <Style.FormSubmit onSubmit={onSubmit}>\n            <Style.FormInput\n              type=\"text\"\n              value={newHowitter}\n              onChange={onChange}\n              placeholder=\"Edit your howitter\"\n              required\n            />\n            <Style.SubmitInput type=\"submit\" value=\"업데이트 하기\" />\n          </Style.FormSubmit>\n          <Style.CancelBtn onClick={togleEditing}>취 소</Style.CancelBtn>\n        </>\n      ) : (\n        <>\n          <Style.Message>{howitterObj.message}</Style.Message>\n          {howitterObj.attachmentUrl && <Style.ProfileImg src={howitterObj.attachmentUrl} />}\n          {isOwner && (\n            <Style.HowitterAction>\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={togleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </Style.HowitterAction>\n          )}\n        </>\n      )}\n    </Style.Container>\n  );\n};\n\nexport default Howitter;\n","import styled from \"styled-components\";\n\nexport const FactoryForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const FactoryContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  position: relative;\n  margin-bottom: 20px;\n  width: 100%;\n`;\n\nexport const FactoryInput = styled.input`\n  flex-grow: 1;\n  height: 40px;\n  padding: 0px 20px;\n  color: white;\n  border: 1px solid #04aaff;\n  border-radius: 20px;\n  font-weight: 500;\n  font-size: 12px;\n`;\n\nexport const FactoryInputArrow = styled.input`\n  position: absolute;\n  right: 0;\n  background-color: #04aaff;\n  height: 40px;\n  width: 40px;\n  padding: 10px 0px;\n  text-align: center;\n  border-radius: 20px;\n  color: white;\n`;\n\nexport const FactoryLabel = styled.label`\n  color: #04aaff;\n  cursor: pointer;\n  > span {\n    margin-right: 10px;\n    font-size: 12px;\n  }\n`;\n\nexport const FactoryInputFile = styled.input`\n  opacity: 0;\n`;\n\nexport const FactoryAttachment = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  > img {\n    height: 80px;\n    width: 80px;\n    border-radius: 50%;\n  }\n`;\n\nexport const FactoryClear = styled.div`\n  color: #04aaff;\n  cursor: pointer;\n  text-align: center;\n  margin-top: 15px;\n  > span {\n    margin-right: 10px;\n    font-size: 12px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"firebaseAPI\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { Iprops, TFormEvent, TChangeEvent, FileReaderEvent } from \"types\";\nimport * as Style from \"styles/Components/HowitterFactoryStyle\";\nconst HowitterFactory = ({ userObj }: Iprops) => {\n  const [howitter, setHowitter] = useState<string>(\"\");\n  const [attachment, setAttachment] = useState<null | string>(\"\");\n\n  const onSubmit = async (event: TFormEvent) => {\n    if (howitter === \"\") {\n      return;\n    }\n    event.preventDefault();\n\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n      const response = await attachmentRef.putString(attachment!, \"data_url\");\n      attachmentUrl = await response.ref.getDownloadURL();\n    }\n\n    await dbService.collection(\"howitter\").add({\n      message: howitter,\n      createAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setHowitter(\"\");\n  };\n\n  const onChange = (event: TChangeEvent) => {\n    const {\n      target: { value },\n    } = event;\n\n    setHowitter(value);\n  };\n\n  const onFileChange = (event: TChangeEvent) => {\n    const {\n      target: { files },\n    } = event;\n    const fileOne = files![0];\n\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent: FileReaderEvent) => {\n      //1. 파일 읽기가 완료 되면 아래의 코드가 실행\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result); // finishedEvent.currentTarget.result 값을 attachment로 넘김(사진 파일을 읽고 나서 나타남)\n    };\n\n    reader.readAsDataURL(fileOne); //2. 파일을 읽어 버퍼에 저장\n    // 파일 관련 객체(reader)\n  };\n\n  const onClearImage = () => setAttachment(\"\");\n\n  return (\n    <Style.FactoryForm onSubmit={onSubmit}>\n      <Style.FactoryContainer>\n        <Style.FactoryInput\n          type=\"text\"\n          value={howitter}\n          onChange={onChange}\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <Style.FactoryInputArrow type=\"submit\" value=\"&rarr;\" />\n      </Style.FactoryContainer>\n      <Style.FactoryLabel htmlFor=\"attach-file\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </Style.FactoryLabel>\n      <Style.FactoryInputFile id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      {attachment && (\n        <Style.FactoryAttachment>\n          <img src={attachment} />\n          <Style.FactoryClear onClick={onClearImage}>\n            <span>사진 삭제 하기</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </Style.FactoryClear>\n        </Style.FactoryAttachment>\n      )}\n    </Style.FactoryForm>\n  );\n};\n\nexport default HowitterFactory;\n","import styled from \"styled-components\";\nimport { CommonContainer } from \"styles/Common/CommonStyle\";\nexport const Container = styled.div`\n  ${CommonContainer}\n`;\n\nexport const Items = styled.div`\n  margin-top: 30px; ;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { dbService } from \"firebaseAPI\";\nimport Howitter from \"Components/Howitter\";\nimport HowitterFactory from \"Components/HowitterFactory\";\nimport { hoWitterInfoType, Iprops } from \"types\";\nimport * as Style from \"styles/Routes/HomeStyle\";\n\nconst Home = ({ userObj }: Iprops) => {\n  const [howitters, setHowitters] = useState<hoWitterInfoType[]>([]);\n\n  useEffect(() => {\n    dbService\n      .collection(\"howitter\")\n      .orderBy(\"createAt\", \"desc\")\n      .onSnapshot((snapshot) => {\n        const howitterArray = snapshot.docs.map(\n          (doc) =>\n            ({\n              id: doc.id,\n              ...doc.data(),\n            } as hoWitterInfoType)\n        );\n        setHowitters(howitterArray);\n      });\n  }, []);\n\n  return (\n    <Style.Container>\n      <HowitterFactory userObj={userObj} />\n      <Style.Items>\n        {howitters.map((howitter: hoWitterInfoType) => (\n          <Howitter key={howitter.id} howitterObj={howitter} isOwner={howitter.creatorId === userObj.uid} />\n        ))}\n      </Style.Items>\n    </Style.Container>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { CommonFormBtn, CommonCancelBtn } from \"styles/Common/CommonStyle\";\nexport const MenuList = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin-top: 50px;\n`;\nexport const LinkHome = styled(Link)`\n  margin-right: 10px;\n`;\nexport const LinkProfile = styled(Link)`\n  margin-left: 10px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-size: 12px;\n`;\n\nexport const UserName = styled.span`\n  margin-top: 10px;\n`;\n\nexport const LogOutBtn = styled.div`\n  ${CommonFormBtn}\n  ${CommonCancelBtn}\n  margin-left:30px;\n  padding: 10px;\n  margin-top: 5px;\n`;\n","import React from \"react\";\nimport { authService } from \"firebaseAPI\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport { Iprops } from \"types\";\nimport * as Style from \"styles/Components/NavigationStyle\";\n\nconst Navigation = ({ userObj }: Iprops) => {\n  let history = useHistory();\n  const onLogOutClick = (): void => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n  return (\n    <nav>\n      <Style.MenuList>\n        <li>\n          <Style.LinkHome to=\"/\">\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n          </Style.LinkHome>\n        </li>\n        <li>\n          <Style.LinkProfile to=\"/profile\">\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n            <Style.UserName>{userObj.displayName ? `${userObj.displayName}` : \"Profile\"}</Style.UserName>\n          </Style.LinkProfile>\n        </li>\n        <li>\n          <Style.LogOutBtn onClick={onLogOutClick}>Log out</Style.LogOutBtn>\n        </li>\n      </Style.MenuList>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import styled from \"styled-components\";\nimport { CommonContainer, CommonFormInput, CommonFormBtn } from \"styles/Common/CommonStyle\";\nexport const Container = styled.div`\n  ${CommonContainer}\n`;\nexport const Form = styled.form`\n  border-bottom: 1px solid rgba(255, 255, 255, 0.9);\n  padding-bottom: 30px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  ${CommonFormInput}\n`;\n\nexport const Submit = styled.input`\n  ${CommonFormBtn}\n  margin-top: 10px;\n`;\n","import React, { useState } from \"react\";\nimport { Iprops, TFormEvent, TChangeEvent } from \"types\";\nimport * as Style from \"styles/Routes/ProfileStyle\";\n\nconst Profile = ({ userObj, refreshUser }: Iprops) => {\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onChange = (event: TChangeEvent) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event: TFormEvent) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({\n        displayName: newDisplayName,\n      });\n      refreshUser();\n    }\n  };\n  return (\n    <Style.Container>\n      <form onSubmit={onSubmit}>\n        <Style.Input onChange={onChange} type=\"text\" autoFocus placeholder=\"Display name\" value={newDisplayName} />\n        <Style.Submit type=\"submit\" value=\"사용자 업데이트 \" placeholder=\"Update profile\" />\n      </form>\n    </Style.Container>\n  );\n};\n\nexport default Profile;\n","import styled from \"styled-components\";\n\nexport const RouterContainer = styled.div`\n  display: flex;\n  max-width: 890px;\n  width: 100%;\n  margin-top: 80px;\n  margin: 0 auto;\n  justify-content: center;\n`;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"Routes/Auth\";\nimport Home from \"Routes/Home\";\nimport Navigation from \"Components/Navigation\";\nimport Profile from \"Routes/Profile\";\nimport { Iprops } from \"types\";\nimport * as Style from \"styles/Components/RouterStyle\";\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }: Iprops) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <Style.RouterContainer>\n            <Route exact path=\"/\" render={() => <Home userObj={userObj} />} />\n            <Route exact path=\"/profile\" render={() => <Profile userObj={userObj} refreshUser={refreshUser} />} />\n          </Style.RouterContainer>\n        ) : (\n          <Route exact path=\"/\" component={Auth} /> //로그인 화면\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import { createGlobalStyle } from \"styled-components\";\nimport { reset } from \"styled-reset\";\nconst GlobalStyle = createGlobalStyle`\n${reset}\n* {\n  box-sizing: border-box;\n}\n\ninput {\n  all: unset;\n  box-sizing: border-box;\n  appearance: none;\n}\n\nbody {\n  background-color: black;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\n    Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\n  font-size: 14px;\n  color: white;\n}\n\nbutton {\n  background-color: white;\n  color: black;\n}\n\na {\n  text-decoration: none;\n  color: inherit;\n}\n\nform {\n  width: 100%;\n}\n`;\n\nexport default GlobalStyle;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"Components/Router\";\nimport { authService } from \"firebaseAPI\";\nimport GlobalStyle from \"styles/global-styles\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"styles/theme\";\n\nfunction App() {\n  const [init, setInit] = useState<boolean>(false);\n  const [userObj, setUserObj] = useState<null | Object>(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user: any) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args: any) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser as any;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args: any) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        {!init ? (\n          \"loading....\"\n        ) : (\n          <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} />\n        )}\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}